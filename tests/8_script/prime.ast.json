{
  "@type" : "Module",
  "block" : {
    "@type" : "Block",
    "statements" : [ {
      "@type" : "Group",
      "declarations" : [ {
        "@type" : "VariableDefinition",
        "variable" : {
          "@type" : "Identifier",
          "title" : "n",
          "typeName" : "integer",
          "line" : 3
        },
        "init" : null,
        "line" : 3
      } ],
      "line" : 3
    }, {
      "@type" : "Assignment",
      "to" : {
        "@type" : "Identifier",
        "title" : "n",
        "typeName" : null,
        "line" : 5
      },
      "from" : {
        "@type" : "FunctionCall",
        "function" : {
          "@type" : "Identifier",
          "title" : "_read",
          "typeName" : null,
          "line" : 5
        },
        "parameters" : [ ],
        "typeName" : null,
        "line" : 5
      },
      "line" : 5
    }, {
      "@type" : "Group",
      "declarations" : [ {
        "@type" : "VariableDefinition",
        "variable" : {
          "@type" : "Identifier",
          "title" : "p",
          "typeName" : "boolean",
          "line" : 7
        },
        "init" : {
          "@type" : "Value",
          "value" : "true",
          "typeName" : "Boolean",
          "line" : 7
        },
        "line" : 7
      } ],
      "line" : 7
    }, {
      "@type" : "ForLoop",
      "init" : {
        "@type" : "VariableDefinition",
        "variable" : {
          "@type" : "Identifier",
          "title" : "i",
          "typeName" : null,
          "line" : 9
        },
        "init" : {
          "@type" : "Value",
          "value" : "2",
          "typeName" : "I64",
          "line" : 9
        },
        "line" : 9
      },
      "loop" : {
        "@type" : "Loop",
        "condition" : {
          "@type" : "BinaryExpression",
          "left" : {
            "@type" : "Identifier",
            "title" : "i",
            "typeName" : null,
            "line" : 9
          },
          "right" : {
            "@type" : "FunctionCall",
            "function" : {
              "@type" : "Identifier",
              "title" : "_sqrt",
              "typeName" : null,
              "line" : 9
            },
            "parameters" : [ {
              "@type" : "Identifier",
              "title" : "n",
              "typeName" : null,
              "line" : 9
            } ],
            "typeName" : null,
            "line" : 9
          },
          "op" : "LT",
          "typeName" : null,
          "line" : 9
        },
        "statement" : {
          "@type" : "Block",
          "statements" : [ {
            "@type" : "IfClause",
            "condition" : {
              "@type" : "BinaryExpression",
              "left" : {
                "@type" : "BinaryExpression",
                "left" : {
                  "@type" : "Identifier",
                  "title" : "n",
                  "typeName" : null,
                  "line" : 10
                },
                "right" : {
                  "@type" : "Identifier",
                  "title" : "i",
                  "typeName" : null,
                  "line" : 10
                },
                "op" : "MOD",
                "typeName" : null,
                "line" : 10
              },
              "right" : {
                "@type" : "Value",
                "value" : "0",
                "typeName" : "I64",
                "line" : 10
              },
              "op" : "EQ",
              "typeName" : null,
              "line" : 10
            },
            "then" : {
              "@type" : "Block",
              "statements" : [ {
                "@type" : "Assignment",
                "to" : {
                  "@type" : "Identifier",
                  "title" : "p",
                  "typeName" : null,
                  "line" : 11
                },
                "from" : {
                  "@type" : "Value",
                  "value" : "false",
                  "typeName" : "Boolean",
                  "line" : 11
                },
                "line" : 11
              } ],
              "line" : 11,
              "scope" : {
                "@type" : "SymbolTable",
                "variables" : { },
                "types" : { },
                "functions" : { }
              }
            },
            "els" : {
              "@type" : "Block",
              "statements" : [ ],
              "line" : 10,
              "scope" : {
                "@type" : "SymbolTable",
                "variables" : { },
                "types" : { },
                "functions" : { }
              }
            },
            "line" : 10,
            "scope" : null
          } ],
          "line" : 10,
          "scope" : {
            "@type" : "SymbolTable",
            "variables" : { },
            "types" : { },
            "functions" : { }
          }
        },
        "evaluation" : "BEFORE",
        "line" : 9
      },
      "steps" : {
        "@type" : "Assignment",
        "to" : {
          "@type" : "Identifier",
          "title" : "i",
          "typeName" : null,
          "line" : 9
        },
        "from" : {
          "@type" : "BinaryExpression",
          "left" : {
            "@type" : "Identifier",
            "title" : "i",
            "typeName" : null,
            "line" : 9
          },
          "right" : {
            "@type" : "Value",
            "value" : "1",
            "typeName" : "I64",
            "line" : 9
          },
          "op" : "ADD",
          "typeName" : null,
          "line" : 9
        },
        "line" : 9
      },
      "line" : 9
    }, {
      "@type" : "IfClause",
      "condition" : {
        "@type" : "BinaryExpression",
        "left" : {
          "@type" : "Identifier",
          "title" : "p",
          "typeName" : null,
          "line" : 15
        },
        "right" : {
          "@type" : "Value",
          "value" : "0",
          "typeName" : "I64",
          "line" : 15
        },
        "op" : "NE",
        "typeName" : null,
        "line" : 15
      },
      "then" : {
        "@type" : "Block",
        "statements" : [ {
          "@type" : "FunctionCall",
          "function" : {
            "@type" : "Identifier",
            "title" : "_write",
            "typeName" : null,
            "line" : 16
          },
          "parameters" : [ {
            "@type" : "BinaryExpression",
            "left" : {
              "@type" : "Identifier",
              "title" : "n",
              "typeName" : null,
              "line" : 16
            },
            "right" : {
              "@type" : "Value",
              "value" : " is prime",
              "typeName" : "String",
              "line" : 16
            },
            "op" : "ADD",
            "typeName" : null,
            "line" : 16
          } ],
          "typeName" : null,
          "line" : 16
        } ],
        "line" : 16,
        "scope" : {
          "@type" : "SymbolTable",
          "variables" : { },
          "types" : { },
          "functions" : { }
        }
      },
      "els" : {
        "@type" : "Block",
        "statements" : [ {
          "@type" : "FunctionCall",
          "function" : {
            "@type" : "Identifier",
            "title" : "_write",
            "typeName" : null,
            "line" : 18
          },
          "parameters" : [ {
            "@type" : "BinaryExpression",
            "left" : {
              "@type" : "Identifier",
              "title" : "n",
              "typeName" : null,
              "line" : 18
            },
            "right" : {
              "@type" : "Value",
              "value" : " is not prime",
              "typeName" : "String",
              "line" : 18
            },
            "op" : "ADD",
            "typeName" : null,
            "line" : 18
          } ],
          "typeName" : null,
          "line" : 18
        } ],
        "line" : 18,
        "scope" : {
          "@type" : "SymbolTable",
          "variables" : { },
          "types" : { },
          "functions" : { }
        }
      },
      "line" : 15,
      "scope" : null
    } ],
    "line" : 3,
    "scope" : {
      "@type" : "SymbolTable",
      "variables" : { },
      "types" : { },
      "functions" : { }
    }
  },
  "line" : 3,
  "scope" : null
}