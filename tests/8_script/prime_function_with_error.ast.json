{
  "errors": [ {
    "id" : "Syntax Error",
    "line" : 7,
    "charPosition" : 35,
    "msg" : "extraneous input 'n' expecting {')', ','}"
  }, {
    "id" : "Syntax Error",
    "line" : 10,
    "charPosition" : 1,
    "msg" : "extraneous input 'finish' expecting {FUNCTION, 'empty', 'declare', 'exec', 'class', INT, FLOAT, 'string', 'boolean', 'for', 'end', 'repeat', 'while', BOOL_VALUE, 'return', 'if', 'else', '(', '!', INT_NUMBER, FLOAT_NUMBER, VARIABLE, SYMBOL, STRING_TEXT}"
  }, {
    "id" : "Syntax Error",
    "line" : 20,
    "charPosition" : 17,
    "msg" : "no viable alternative at input 'execwrite(text:'"
  }, {
    "id" : "Syntax Error",
    "line" : 20,
    "charPosition" : 17,
    "msg" : "no viable alternative at input '(text:'"
  }, {
    "id" : "Syntax Error",
    "line" : 20,
    "charPosition" : 17,
    "msg" : "extraneous input ':' expecting {FUNCTION, 'empty', 'declare', 'exec', 'class', INT, FLOAT, 'string', 'boolean', 'for', 'end', 'repeat', 'while', BOOL_VALUE, 'return', 'if', 'else', '(', '!', INT_NUMBER, FLOAT_NUMBER, VARIABLE, SYMBOL, STRING_TEXT}"
  }, {
    "id" : "Syntax Error",
    "line" : 20,
    "charPosition" : 32,
    "msg" : "extraneous input ')' expecting {FUNCTION, 'empty', 'declare', 'exec', 'class', INT, FLOAT, 'string', 'boolean', 'for', 'end', 'repeat', 'while', BOOL_VALUE, 'return', 'if', 'else', '(', '!', INT_NUMBER, FLOAT_NUMBER, VARIABLE, SYMBOL, STRING_TEXT}"
  }, {
    "id" : "Syntax Error",
    "line" : 21,
    "charPosition" : 0,
    "msg" : "mismatched input 'else' expecting {NEWLINE, FUNCTION, '+', '-', '*', '/', '%', 'empty', 'declare', 'exec', 'class', INT, FLOAT, 'string', 'boolean', 'for', 'end', 'repeat', 'while', BOOL_VALUE, 'return', 'if', 'else', 'xor', '(', ';', '&&', '||', '!', '[', '.', INT_NUMBER, FLOAT_NUMBER, VARIABLE, SYMBOL, STRING_TEXT}"
  } ]
}